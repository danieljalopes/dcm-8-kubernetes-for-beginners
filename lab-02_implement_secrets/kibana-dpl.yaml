apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
        app.kubernetes.io/name: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.11.4
          resources:
            requests:  # minimum required
                 cpu: 500m
                 memory: "512Mi"
            limits:    # maximum allowed
              cpu: 500m
              memory: "512Mi"
          env:
            - name: NODE_OPTIONS
              value: "--max_old_space_size=2048"
          ports:
            - containerPort: 5601
              name: webinterface
              #hostPort: 5601 # we should let K8s to manage this
          volumeMounts:
            - name: kibana-config
              mountPath: /usr/share/kibana/config
              readOnly: true          
      volumes:
        - name: kibana-config
          configMap:
            name: kibana-cm
      
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-cm
  namespace: monitoring
data:
  kibana.yml: |
    elasticsearch.hosts: [ "http://elasticsearch-svc.monitoring.svc.cluster.local:9200" ]
    server.host: "0.0.0.0"
    server.port: 5601
    elasticsearch.username: "kibana_system"
    elasticsearch.password: kibana123
---
# to expose kibana to outside K8s cluster
apiVersion: v1
kind: Service
metadata:
  name: kibana-np
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: kibana
  ports:
    - port: 5602
      # By default and for convenience, the `targetPort` is set to
      # the same value as the `port` field.
      targetPort: 5601
      # Optional field
      # By default and for convenience, the Kubernetes control plane
      # will allocate a port from a range (default: 30000-32767)
      #nodePort: 30601
